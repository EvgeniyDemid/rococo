version: '3.9'

services:
  rococo-all-db:
    container_name: rococo-all-db
    image: postgres:15.1
    environment:
      - POSTGRES_MULTIPLE_DATABASES="rococo-auth","rococo-country","rococo-museum","rococo-userdata"
      - PGUSER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - rococo-network
    dns_search: .

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - rococo-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - rococo-network

  auth.rococo.dc:
    container_name: auth.rococo.dc
    image: ${PREFIX}/rococo-auth-${PROFILE}:latest
    ports:
      - "9000:9000"
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-all-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - rococo-network
    dns_search: .

  country.rococo.dc:
    container_name: country.rococo.dc
    image: ${PREFIX}/rococo-country-${PROFILE}:latest
    ports:
      - "8091:8091"
      - "8092:8092"
    restart: always
    depends_on:
      rococo-all-db:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

  gateway.rococo.dc:
    container_name: gateway.rococo.dc
    image: ${PREFIX}/rococo-gateway-${PROFILE}:latest
    ports:
      - "8090:8090"
    healthcheck:
      test: "wget --spider http://localhost:8090/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

  spend.rococo.dc:
    container_name: museum.rococo.dc
    image: ${PREFIX}/rococo-museum-${PROFILE}:latest
    ports:
      - "8093:8093"
    restart: always
    depends_on:
      rococo-all-db:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

  userdata.rococo.dc:
    container_name: userdata.rococo.dc
    image: ${PREFIX}/rococo-userdata-${PROFILE}:latest
    ports:
      - "8089:8089"
    restart: always
    depends_on:
      auth.rococo.dc:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

  frontend.rococo.dc:
    container_name: frontend.rococo.dc
    image: "${FRONT_IMAGE}"
    ports:
      - "80:80"
    restart: always
    depends_on:
      gateway.rococo.dc:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

volumes:
  pgdata-st5:
    external: true

networks:
  rococo-network:
    driver: bridge
