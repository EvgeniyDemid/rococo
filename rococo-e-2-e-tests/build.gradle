buildscript {
    ext {
        allureVersion = '2.27.0'
        selenideVersion = '7.2.3'
        fakerVersion = '1.0.2'
        retrofitVersion = '2.11.0'
        okhttp3Version = '3.14.9'
        springDataCommonsVersion = '3.2.5'
        junitVersion = '5.10.2'
        googleVersion = '4.2.2'
        logbackVersion = '1.4.11'
        slf4jVersion = '2.0.9'
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.qameta.allure-adapter' version '2.11.2'
}

group 'org.rococo'
version = '0.0.1-SNAPSHOT'

allure {
    version.set("${allureVersion}")
    adapter {
        aspectjVersion.set("1.9.22")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Logs
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"

    // Utils
    testImplementation"com.github.javafaker:javafaker:${fakerVersion}"

    // REST
    testImplementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    testImplementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    testImplementation "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"
    testImplementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp3Version}"
    testImplementation "org.springframework.data:spring-data-commons:${springDataCommonsVersion}"


    // WEB
    testImplementation "com.codeborne:selenide:${selenideVersion}"

}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    options {
        systemProperties(System.getProperties())
    }
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
}